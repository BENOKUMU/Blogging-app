name: Deploy to cPanel

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.17'

    - name: Install dependencies for client
      run: |
        cd client
        npm install

    - name: Install dependencies for server
      run: npm install

    - name: Build client
      run: |
        cd client
        npm run build

    - name: Debug environment
      run: |
        echo "Root contents:"
        ls -la
        echo "Client contents:"
        ls -la client
        echo "Server contents:"
        ls -la
        echo "Build contents:"
        ls -la client/dist

    - name: Deploy to cPanel
      env:
        CPANEL_HOST: ${{ secrets.GIT_CPANEL_HOST }}
        CPANEL_USER: ${{ secrets.GIT_CPANEL_USER }}
        CPANEL_PASSWORD: ${{ secrets.GIT_CPANEL_PASSWORD }}
      run: |
        # Check if app.mjs is required
        if [ -f "server/src/app.mjs" ]; then
          echo "‚úÖ server/src/app.mjs found in the root directory."
        else
          echo "‚ö†Ô∏è server/src/app.mjs not found. Skipping app.mjs deployment."
        fi

        if [ -d "client/dist" ] && [ -f "package.json" ]; then
          echo "‚úÖ Required files and directories exist. Proceeding with deployment."
          zip -r deploy.zip client/dist package.json server/src/app.mjs
          echo "üì¶ Archive created successfully."

          echo "üöÄ Starting upload to cPanel."
          for i in {1..3}; do
            curl --max-time 1800 -u $CPANEL_USER:$CPANEL_PASSWORD ftp://$CPANEL_HOST/public_html/ --upload-file deploy.zip && break || echo "Retrying upload ($i)..."
          done
          
          echo "üîÑ Extracting files on the server."
          sshpass -p $CPANEL_PASSWORD ssh $CPANEL_USER@$CPANEL_HOST "unzip -o public_html/deploy.zip -d public_html/ && rm public_html/deploy.zip"
        else
          echo "‚ùå Required files or directories are missing. Deployment aborted."
          exit 1
        fi
      shell: /usr/bin/bash -e {0}

    - name: Deployment success message
      if: success()
      run: echo "üéâ Deployment to cPanel was successful! üöÄ"

    - name: Deployment failure message
      if: failure()
      run: echo "‚ùå Deployment to cPanel failed. Please check the logs for more details."
